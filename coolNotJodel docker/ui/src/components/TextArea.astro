---
export interface Props {
	hidden: string;
    placeholder: string;
}

const { hidden, placeholder } = Astro.props;
---
<div class="instructions">
        <div>
            <textarea name="content" class="textArea" id="content" placeholder={placeholder}></textarea>
        </div>
        <input id="hidden" type="hidden" value={hidden}>
        <input id="send" class="btn" type="submit">
</div>

<style>
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}

	.textArea{
        background-color: hsla(257, 31%, 11%, 1);
        border-radius: 0.5rem;
        padding: 1rem 1.3rem;
        color: aliceblue;
		width: 92%; 
		max-width: 92%;
    }
    .btn{
        margin-top: 0.5rem;
        display: flex;
		padding: 0.5rem;
		background-color: white;
        background-image: var(--accent-gradient);
		background-size: 400%;
		border-radius: 0.5rem;
        border-color: purple;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
    }
    .btn:is(:hover, :focus-within) {
        background-position: 0;
		color: white;
	}
</style>
